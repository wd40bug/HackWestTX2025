@* @using System.Runtime.CompilerServices *@
@* @inject ILogger<UploadFile> Logger *@
@rendermode InteractiveServer

<div class="container">
    <h1>Upload File</h1>

    <div class="inner-container">
        <InputFile OnChange="HandleFileSelected" />
        <div class="token">
            <p>Discord User Id:</p>
            <InputNumber class="discord_token" @bind-Value="@token" />
        </div>
    </div>
    <div class="button-holder">
        <button class="titan-one love-button" disabled="@button_disabled" @onclick="CalculateLove">CALCULATE
            LOVE</button>
    </div>



</div>
@if (!tutorial_shown)
{
    <button class="tutorial-button" @onclick="toggleTutorial">show tutorial</button>
}
else
{
    <button class="tutorial-button" @onclick="toggleTutorial">hide tutorial</button>
    <div class="upload-tutorial-spacer" />
    <div class="upload-tutorial">
        <h1><b>Tutorial</b></h1>
        <br />
        <h2>Download DiscordChatExporter</h2>
        <p>From <a
                href="https://github.com/Tyrrrz/DiscordChatExporter/releases/tag/2.46">https://github.com/Tyrrrz/DiscordChatExporter/releases/tag/2.46</a>
            download
            DiscordChatExporter.Cli.&ltplatform&gt-&ltarch&gt.zip (fill in your platform and architecture). Extract the file
            to a folder.</p>
        <h2>Get discord token</h2>
        <p>Follow instructions at <a
                href="https://github.com/Tyrrrz/DiscordChatExporter/blob/master/.docs/Token-and-IDs.md">https://github.com/Tyrrrz/DiscordChatExporter/blob/master/.docs/Token-and-IDs.md</a>
            to determine your discord token</p>
        <h2>List Chats</h2>
        <p>Execute command `DISCORD_TOKEN=&ltTOKEN&gt ./DiscordChatExporter dm` (fill in your token) to list your dms. Copy
            the snowflake of the
            one you want to export</p>
        <h2>Export</h2>
        <p>Execute command `DISCORD_TOKEN=&ltTOKEN&gt ./DiscordChatExporter export &ltSNOWFLAKE&gt -o &ltOUTPUT_FILE&gt -f
            json` (fill in your token, snowflake, and output file)</p>
        <h2>User ID</h2>
        <p>Enable developer mode by following these instruction <a
                href="https://support.discord.com/hc/en-us/articles/206346498-Where-can-I-find-my-User-Server-Message-ID#h_01HRSTXPS5CRSRTWYCGPHZQ37H">https://support.discord.com/hc/en-us/articles/206346498-Where-can-I-find-my-User-Server-Message-ID#h_01HRSTXPS5CRSRTWYCGPHZQ37H</a>
        </p>
    </div>
}


<style>
    .tutorial-button {
        background-color:
            @BlazorTest.ColorConstants.light_pink
        ;
        margin-top: 10px;
        margin-bottom: 5px;
        border: 0;
        border-radius: 5px;
    }

    .upload-tutorial-spacer {
        height: 0px;
    }

    .upload-tutorial {
        display: inline-block;
        background-color:
            @BlazorTest.ColorConstants.light_purple
        ;
        border-radius: 10px;
        padding: 10px;
        position: absolute;
        transform: translate(-50%, 0%);
    }
</style>



@code {
    private bool tutorial_shown = false;
    private void toggleTutorial()
    {
        tutorial_shown = !tutorial_shown;
    }

    [Parameter]
    [EditorRequired]
    public EventCallback<(IBrowserFile, string)> OnLove { get; set; }
    private bool button_disabled = true;

    [Parameter]
    public string discord_token { get; set; } = "";
    private Int64? token
    {
        get
        {
            Int64? value = 0;
            try
            {
                value = Int64.Parse(discord_token);
            }
            catch (FormatException)
            {
                value = null;
            }
            return value;
        }
        set
        {
            if (value is null)
            {
                discord_token = "";
            }
            else
            {
                string? parsed = value.ToString();
                if (parsed is not null)
                {
                    discord_token = parsed;
                }
                else
                {
                    discord_token = "";
                }
            }

            IsReadyForLove();
        }
    }
    private IBrowserFile? chatlog;

    private void IsReadyForLove()
    {
        if (chatlog is not null && token is not null)
        {
            button_disabled = false;
        }
    }
    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        chatlog = e.File;
        IsReadyForLove();
    }

    private void CalculateLove()
    {
        Console.WriteLine("File name: " + chatlog?.Name);
        Console.WriteLine("Discord token: " + discord_token);
        if (chatlog is null || discord_token is null)
        {
            return;
        }
        OnLove.InvokeAsync((chatlog, discord_token));
    }
}

<style>
    .container {
        background-color:
            @BlazorTest.ColorConstants.purple
        ;
        border-radius: 20px;
        padding: 10px;
        height: 100%;
    }

    .inner-container {
        background-color:
            @BlazorTest.ColorConstants.light_purple
        ;
        display: grid;
        grid-template-columns: 1fr 1fr;
        padding: 10px;
        border-radius: 10px;
        height: 100px;
        align-items: center;
    }

    .button-holder {
        padding: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .love-button {
        width: 50%;
        height: 50px;
        background-color:
            @BlazorTest.ColorConstants.light_purple
        ;
        border: 0px;
        border-radius: 10px;
    }

    .love-button:enabled {
        color:
            @BlazorTest.ColorConstants.rose
        ;
    }

    .love-button:enabled:hover {
        background-color:
            @BlazorTest.ColorConstants.mimi
        ;
    }

    body {
        height: 100%;
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number] {
        -moz-appearance: textfield;
    }

    .discord_token {
        background-color:
            @BlazorTest.ColorConstants.mimi
        ;
        border: 0px;
        border-radius: 5px;
        width: 100%;
    }
</style>